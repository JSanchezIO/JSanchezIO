import type { Linter } from 'eslint';
import { RuleSeverity } from './constants';

const parserOptions = {
  ecmaFeatures: {
    jsx: true,
  },
} satisfies Linter.Config['parserOptions'];

const settings = {
  react: {
    version: 'detect',
  },
} satisfies Linter.Config['settings'];

export const reactConfigs = [
  {
    env: {
      browser: true,
    },
    files: ['**/*.tsx'],
    parserOptions,
    plugins: ['jsx-a11y', 'react', 'react-hooks'],
    rules: {
      'jsx-a11y/alt-text': RuleSeverity.Warn,
      'jsx-a11y/anchor-has-content': [RuleSeverity.Warn, { aspects: ['Link', 'NavLink'] }],
      'jsx-a11y/anchor-is-valid': [RuleSeverity.Warn, { aspects: ['noHref', 'invalidHref'] }],
      'jsx-a11y/aria-activedescendant-has-tabindex': RuleSeverity.Warn,
      'jsx-a11y/aria-props': RuleSeverity.Warn,
      'jsx-a11y/aria-proptypes': RuleSeverity.Warn,
      'jsx-a11y/aria-role': [RuleSeverity.Warn, { ignoreNonDOM: true }],
      'jsx-a11y/aria-unsupported-elements': RuleSeverity.Warn,
      'jsx-a11y/iframe-has-title': RuleSeverity.Warn,
      'jsx-a11y/img-redundant-alt': RuleSeverity.Warn,
      'jsx-a11y/lang': RuleSeverity.Warn,
      'jsx-a11y/no-access-key': RuleSeverity.Warn,
      'jsx-a11y/no-redundant-roles': RuleSeverity.Warn,
      'jsx-a11y/role-has-required-aria-props': RuleSeverity.Warn,
      'jsx-a11y/role-supports-aria-props': RuleSeverity.Warn,
      'react-hooks/exhaustive-deps': RuleSeverity.Warn,
      'react-hooks/rules-of-hooks': RuleSeverity.Error,
      'react/display-name': RuleSeverity.Warn,
      'react/forbid-foreign-prop-types': [RuleSeverity.Warn, { allowInPropTypes: true }],
      'react/jsx-key': RuleSeverity.Warn,
      'react/jsx-no-comment-textnodes': RuleSeverity.Warn,
      'react/jsx-no-target-blank': RuleSeverity.Warn,
      'react/jsx-no-undef': RuleSeverity.Error,
      'react/jsx-pascal-case': [RuleSeverity.Warn, { allowAllCaps: true, ignore: [] }],
      'react/jsx-uses-react': RuleSeverity.Warn,
      'react/jsx-uses-vars': RuleSeverity.Warn,
      'react/no-danger-with-children': RuleSeverity.Warn,
      'react/no-direct-mutation-state': RuleSeverity.Warn,
      'react/no-find-dom-node': RuleSeverity.Warn,
      'react/no-is-mounted': RuleSeverity.Warn,
      'react/no-render-return-value': RuleSeverity.Error,
      'react/no-string-refs': RuleSeverity.Warn,
      'react/no-typos': RuleSeverity.Warn,
      'react/react-in-jsx-scope': RuleSeverity.Off,
      'react/require-render-return': RuleSeverity.Error,
      'react/style-prop-object': RuleSeverity.Warn,
    },
    settings,
  },
  {
    files: ['**/*.test.tsx'],
    parserOptions,
    plugins: ['jest-dom', 'testing-library'],
    rules: {
      'jest-dom/prefer-checked': RuleSeverity.Warn,
      'jest-dom/prefer-empty': RuleSeverity.Warn,
      'jest-dom/prefer-enabled-disabled': RuleSeverity.Warn,
      'jest-dom/prefer-focus': RuleSeverity.Warn,
      'jest-dom/prefer-in-document': RuleSeverity.Warn,
      'jest-dom/prefer-required': RuleSeverity.Warn,
      'jest-dom/prefer-to-have-attribute': RuleSeverity.Warn,
      'jest-dom/prefer-to-have-class': RuleSeverity.Warn,
      'jest-dom/prefer-to-have-style': RuleSeverity.Warn,
      'jest-dom/prefer-to-have-text-content': RuleSeverity.Warn,
      'jest-dom/prefer-to-have-value': RuleSeverity.Warn,
      'testing-library/await-async-query': RuleSeverity.Error,
      'testing-library/await-async-utils': RuleSeverity.Error,
      'testing-library/no-await-sync-events': RuleSeverity.Error,
      'testing-library/no-await-sync-query': RuleSeverity.Error,
      'testing-library/no-debugging-utils': RuleSeverity.Warn,
      'testing-library/no-promise-in-fire-event': RuleSeverity.Error,
      'testing-library/no-render-in-setup': RuleSeverity.Error,
      'testing-library/no-unnecessary-act': RuleSeverity.Error,
      'testing-library/no-wait-for-empty-callback': RuleSeverity.Error,
      'testing-library/no-wait-for-multiple-assertions': RuleSeverity.Error,
      'testing-library/no-wait-for-side-effects': RuleSeverity.Error,
      'testing-library/no-wait-for-snapshot': RuleSeverity.Error,
      'testing-library/prefer-find-by': RuleSeverity.Warn,
      'testing-library/prefer-presence-queries': RuleSeverity.Warn,
      'testing-library/prefer-query-by-disappearance': RuleSeverity.Warn,
      'testing-library/prefer-screen-queries': RuleSeverity.Warn,
      'testing-library/prefer-user-event': RuleSeverity.Warn,
      'testing-library/prefer-wait-for': RuleSeverity.Warn,
      'testing-library/render-result-naming-convention': RuleSeverity.Warn,
    },
  },
] satisfies Linter.ConfigOverride[];
